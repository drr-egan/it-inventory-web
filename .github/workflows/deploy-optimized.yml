name: Deploy Optimized Build to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages-optimized"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare deployment files
        run: |
          # Use pre-built assets that are already committed
          echo "=== Using Pre-built Assets ==="

          # Create deployment directory structure
          mkdir -p deploy

          # Copy all necessary files to deploy directory
          cp index.html deploy/
          cp -r assets/ deploy/
          cp manifest.webmanifest deploy/
          cp registerSW.js deploy/
          cp sw.js deploy/
          cp workbox-*.js deploy/
          cp cart-icon.png deploy/ 2>/dev/null || echo "Cart icon will be copied if available"
          cp favicon.ico deploy/ 2>/dev/null || echo "Favicon will be copied if available"

          # Ensure data directory exists
          mkdir -p deploy/data

          # Copy data files if they exist
          if [ -d "data" ]; then
            cp -r data/* deploy/data/
          else
            # Create empty data files for fallback
            echo "[]" > deploy/data/items.json
            echo "[]" > deploy/data/users.json
            echo "[]" > deploy/data/checkoutHistory.json
          fi

          # Verify deployment structure
          echo "=== Deployment Structure ==="
          find deploy -type f | head -20

          echo "=== Asset Verification ==="
          ls -la deploy/assets/ | head -10

          # Calculate total size
          total_size=$(du -sb deploy/ | cut -f1)
          echo "Total deployment size: $total_size bytes"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4