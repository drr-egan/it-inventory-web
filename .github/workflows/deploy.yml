name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare Files
        run: |
          # Copy GitHub Pages version as main index.html
          cp index-github-pages.html index.html

          # Ensure data directory exists
          mkdir -p data

          # Verify data files exist and show their sizes
          echo "=== Data File Status ==="
          for file in items.json users.json checkoutHistory.json; do
            if [ -f "data/$file" ]; then
              size=$(wc -c < "data/$file")
              lines=$(wc -l < "data/$file")
              echo "✅ data/$file: $size bytes, $lines lines"

              # Show first line to verify content
              echo "   Preview: $(head -1 "data/$file" | cut -c1-80)..."
            else
              echo "❌ data/$file not found - creating empty file"
              echo "[]" > "data/$file"
            fi
          done

          # Verify JSON files are valid
          echo "=== JSON Validation ==="
          for file in data/*.json; do
            if python3 -m json.tool "$file" >/dev/null 2>&1; then
              echo "✅ $file is valid JSON"
            else
              echo "❌ $file has invalid JSON - replacing with empty array"
              echo "[]" > "$file"
            fi
          done

          # Copy cart icon if it exists
          [ -f cart-icon.png ] && cp cart-icon.png . || echo "Cart icon not found, app will use fallback"

          # Show final deployment structure
          echo "=== Final Deployment Files ==="
          echo "Main files:"
          ls -la index.html github-pages-adapter.js checkout.png 2>/dev/null || true
          echo "Data files:"
          ls -la data/

          # Show total data size
          total_size=$(du -sb data/ | cut -f1)
          echo "Total data directory size: $total_size bytes"
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4