name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare Files
        run: |
          # Copy GitHub Pages version as main index.html
          cp index-github-pages.html index.html

          # Verify data directory and files exist from repository
          echo "=== Checking repository data files ==="
          ls -la data/ || echo "Data directory not found"

          # Show content of data files to verify they have data
          echo "=== Data file contents preview ==="
          if [ -f data/items.json ]; then
            echo "items.json first 5 lines:"
            head -5 data/items.json
            echo "items.json size: $(wc -c < data/items.json) bytes"
          else
            echo "Creating empty items.json"
            mkdir -p data && echo "[]" > data/items.json
          fi

          if [ -f data/users.json ]; then
            echo "users.json size: $(wc -c < data/users.json) bytes"
          else
            echo "Creating empty users.json"
            mkdir -p data && echo "[]" > data/users.json
          fi

          if [ -f data/checkoutHistory.json ]; then
            echo "checkoutHistory.json size: $(wc -c < data/checkoutHistory.json) bytes"
          else
            echo "Creating empty checkoutHistory.json"
            mkdir -p data && echo "[]" > data/checkoutHistory.json
          fi

          # Copy cart icon if it exists
          [ -f cart-icon.png ] && cp cart-icon.png . || echo "Cart icon not found, app will use fallback"

          # List final deployment files
          echo "=== Final deployment structure ==="
          ls -la
          echo "=== Data directory final state ==="
          ls -la data/
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4